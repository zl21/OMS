server {
    listen       80;
    server_name web;
    charset utf-8;
    index index.html index.htm index.jsp index.do;
    root /opt/tengine/www/dist;
    #index /opt/tengine/www/dist/index.html;


	#开启和关闭gzip模式
	gzip on;
	
	#gizp压缩起点，文件大于1k才进行压缩
	gzip_min_length 1k;
	
	# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
	gzip_comp_level 6;
	
	# 进行压缩的文件类型。
	gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json image/png image/gif image/jpeg;
	
	#nginx对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩
	gzip_static on;

    add_header X-Frame-Options DENY;
    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";	

    location ~ .*_BRAND_PIC\.(gif|jpg|jpeg|png)$ {
      expires 0d;
      root /opt/tengine/www/brandpic;
      if (!-e $request_filename) {
        root /opt/tengine/www/dist;
      }
    }

    #配置Nginx动静分离，定义的静态页面直接从Nginx发布目录读取。
    location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css)$
    {
        root /opt/tengine/www/dist;
        #expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
        expires      0d;
    }

location ~.*\.(html|htm)$
{
    add_header Cache-Control no-cache;
}

location / {
  try_files $uri $uri/ /index.html;
}

location /p/ {
	    proxy_next_upstream http_500 http_502 http_503 http_404 error timeout invalid_header;
		proxy_pass ${WEB_HOST_URL}$request_uri;
		proxy_redirect off ;
		proxy_set_header Host $host:9093;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header REMOTE-HOST $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		client_max_body_size 300m;
		client_body_buffer_size 1m;
		proxy_connect_timeout 1;
		proxy_send_timeout 30;
		proxy_read_timeout 1800;
		send_timeout 30s;
		proxy_buffer_size 1m;
		proxy_buffers 4 1m;
		proxy_busy_buffers_size 1m;
		proxy_temp_file_write_size 1m;
		proxy_max_temp_file_size 128m;
}
location /api/ {
	    proxy_next_upstream http_500 http_502 http_503 http_404 error timeout invalid_header;
		proxy_pass ${WEB_HOST_URL}$request_uri;
		proxy_redirect off ;
		proxy_set_header Host $host:9093;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header REMOTE-HOST $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		client_max_body_size 300m;
		client_body_buffer_size 1m;
		proxy_connect_timeout 1;
		proxy_send_timeout 30;
		proxy_read_timeout 1800;
		send_timeout 30s;
		proxy_buffer_size 1m;
		proxy_buffers 4 1m;
		proxy_busy_buffers_size 1m;
		proxy_temp_file_write_size 1m;
		proxy_max_temp_file_size 128m;
}
location ~* .*/api/rpt/ {
    proxy_pass ${PRINT_HOST_URL}$request_uri;
    proxy_redirect off ;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header REMOTE-HOST $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    client_max_body_size 50m;
    client_body_buffer_size 256k;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 1800;
    send_timeout 30s;
    proxy_buffer_size 256k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
    proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
    proxy_max_temp_file_size 128m;
}
location ^~ /mall/ {
	proxy_pass http://172.16.8.32:10003/;
	proxy_redirect off ;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header REMOTE-HOST $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	client_max_body_size 50m;
	client_body_buffer_size 256k;
	proxy_connect_timeout 1;
	proxy_send_timeout 30;
	proxy_read_timeout 1800;
	proxy_buffer_size 256k;
	proxy_buffers 4 256k;
	proxy_busy_buffers_size 256k;
	proxy_temp_file_write_size 256k;
	proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
	proxy_max_temp_file_size 128m;

}
}
